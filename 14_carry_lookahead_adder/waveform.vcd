$version Generated by VerilatedVcd $end
$timescale 1s $end
 $scope module TOP $end
  $var wire 4 # inp_1 [3:0] $end
  $var wire 4 $ inp_2 [3:0] $end
  $var wire 4 % sum [3:0] $end
  $var wire 1 & carry $end
  $scope module adder $end
   $var wire 4 # inp_1 [3:0] $end
   $var wire 4 $ inp_2 [3:0] $end
   $var wire 4 % sum [3:0] $end
   $var wire 1 & carry $end
   $var wire 4 ' p [3:0] $end
   $var wire 4 ( g [3:0] $end
   $var wire 5 ) cp [4:0] $end
   $scope module cl1 $end
    $var wire 1 : carry_inp $end
    $var wire 4 ' p [3:0] $end
    $var wire 4 ( g [3:0] $end
    $var wire 5 ) c [4:0] $end
   $upscope $end
   $scope module h0 $end
    $var wire 1 * a $end
    $var wire 1 + b $end
    $var wire 1 , p $end
    $var wire 1 - g $end
    $var wire 1 , sum_tmp $end
    $var wire 1 - carry_tmp $end
   $upscope $end
   $scope module h1 $end
    $var wire 1 . a $end
    $var wire 1 / b $end
    $var wire 1 0 p $end
    $var wire 1 1 g $end
    $var wire 1 0 sum_tmp $end
    $var wire 1 1 carry_tmp $end
   $upscope $end
   $scope module h2 $end
    $var wire 1 2 a $end
    $var wire 1 3 b $end
    $var wire 1 4 p $end
    $var wire 1 5 g $end
    $var wire 1 4 sum_tmp $end
    $var wire 1 5 carry_tmp $end
   $upscope $end
   $scope module h3 $end
    $var wire 1 6 a $end
    $var wire 1 7 b $end
    $var wire 1 8 p $end
    $var wire 1 9 g $end
    $var wire 1 8 sum_tmp $end
    $var wire 1 9 carry_tmp $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b0000 #
b0100 $
b0100 %
0&
b0100 '
b0000 (
b00000 )
0*
0+
0,
0-
0.
0/
00
01
02
13
14
05
06
07
08
09
0:
#1
b0010 #
b0110 $
b1000 %
b0010 (
b01100 )
1.
1/
11
#2
b1000 #
b0010 $
b1010 %
b1010 '
b0000 (
b00000 )
0.
10
01
03
04
16
18
#3
b1001 $
b0001 %
1&
b0001 '
b1000 (
b10000 )
1+
1,
0/
00
17
08
19
#4
b0010 #
b0010 $
b0100 %
0&
b0000 '
b0010 (
b00100 )
0+
0,
1.
1/
11
06
07
09
#5
b0110 #
b0101 $
b1011 %
b0011 '
b0100 (
b01000 )
1+
1,
0/
10
01
12
13
15
#6
b1100 #
b0001 $
b1101 %
b1101 '
b0000 (
b00000 )
0.
00
03
14
05
16
18
#9
